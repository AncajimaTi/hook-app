{"version":3,"sources":["hooks/useForm.js","components/08-useReducer/TodoAdd.js","components/08-useReducer/TodoListItem.js","components/08-useReducer/TodoList.js","components/08-useReducer/todoReducer.js","components/08-useReducer/TodoApp.js","index.js"],"names":["useForm","initialState","useState","values","setvalues","handleInputChange","target","name","value","reset","TodoAdd","handleAddTodo","descripcion","onSubmit","e","preventDefault","trim","length","newTodo","id","Date","getTime","desc","done","type","className","placeholder","autoComplete","onChange","TodoListItem","todo","index","handleDelete","handleToggle","key","onClick","TodoList","todos","console","log","map","i","todoReducer","state","action","playload","filter","TodoApp","useReducer","JSON","parse","localStorage","getItem","dispatch","useEffect","setItem","stringify","todoid","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d21f668c.chunk.js","sourcesContent":["import {useState} from 'react'\r\n\r\nconst useForm = (initialState={}) => {\r\n    const [values, setvalues] = useState(initialState);\r\n\r\n    const handleInputChange=({target})=>{\r\n        setvalues({\r\n            ...values,\r\n            [target.name]:target.value\r\n        })\r\n\r\n    }\r\n    const reset=()=>{\r\n        setvalues(initialState);\r\n    }\r\n\r\n    return [values,handleInputChange,reset];\r\n}\r\n\r\nexport default useForm;","import React from 'react'\r\nimport useForm from '../../hooks/useForm'\r\n\r\nconst TodoAdd = ({handleAddTodo}) => {\r\n\r\n     const [{descripcion},handleInputChange,reset]=useForm({\r\n                                            descripcion:'',\r\n                                       })\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        if(descripcion.trim().length<=1){\r\n            return ;\r\n         }\r\n\r\n         const newTodo={\r\n                    id:new Date().getTime(),\r\n                    desc:descripcion,\r\n                    done:false\r\n                }\r\n\r\n            handleAddTodo(newTodo);\r\n            reset();\r\n    }\r\n    \r\n\r\n    return (\r\n        <>\r\n             <h4>Agregar TODO</h4>\r\n                                <hr />\r\n\r\n                                <form onSubmit={handleSubmit}>\r\n                                    <input\r\n                                            type=\"text\"\r\n                                            name=\"descripcion\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Aprender ...\"\r\n                                            autoComplete=\"off\"\r\n                                            value={descripcion}\r\n                                            onChange={handleInputChange}\r\n                                            />\r\n                                    <button\r\n                                        type=\"submit\"\r\n                                        className=\"btn btn-outline-primary mt-1 btn-block\"\r\n                                       >\r\n                                            Agregar\r\n                                    </button>\r\n                                </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TodoAdd\r\n","import React from 'react'\r\n\r\nconst TodoListItem = ({todo,index,handleDelete,handleToggle}) => {\r\n    return (\r\n        <li key={todo.id} \r\n            className=\"list-group-item\">\r\n            <p className={`${todo.done&&'complete'}`}\r\n                onClick={()=>handleToggle(todo.id)}\r\n                >{index+1}. {todo.desc}</p>\r\n            <button className=\"btn btn-danger\"\r\n                    onClick={(e)=>handleDelete(todo.id)}>Borrar</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default TodoListItem\r\n","import React from 'react'\r\nimport TodoListItem from './TodoListItem'\r\n\r\nconst TodoList = ({todos,handleDelete,handleToggle}) => {\r\n    console.log(todos)\r\n    return (\r\n\r\n        <div>  \r\n            <ul className=\"list-group list-group-flush\">\r\n                {\r\n                    todos.map((todo,i)=>(\r\n                        //TodoListItem,todo,index,handleDelete,handleToggle\r\n                        <TodoListItem  key={todo.id}\r\n                                        todo={todo} \r\n                                        index={i} \r\n                                        handleDelete={handleDelete}\r\n                                        handleToggle={handleToggle}/>\r\n                           ))\r\n                \r\n                }\r\n              </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList\r\n","export const todoReducer=(state=[],action)=>{\r\n    \r\n     switch (action?.type) {\r\n         case 'add':\r\n             return [...state,action.playload];\r\n         \r\n         case 'delete':\r\n             return state.filter(todo=>todo.id !== action.playload);\r\n        case 'toggle':\r\n            return state.map(todo=>\r\n                ( todo.id === action.playload)\r\n                ? {...todo,done:!todo.done}\r\n                : todo\r\n            )\r\n         case 'toggle-old':\r\n             return state.map(todo=>{\r\n                 if(todo.id === action.playload){\r\n                     return {\r\n                            ...todo,\r\n                            done: !todo.done}\r\n                     }else{\r\n                         return todo;\r\n                     }\r\n                 }\r\n             )\r\n         default:\r\n             return state;\r\n     }\r\n}","import React, { useEffect, useReducer } from 'react';\r\n//import useForm from '../../hooks/useForm';\r\nimport './styles.css';\r\nimport TodoAdd from './TodoAdd';\r\nimport TodoList from './TodoList';\r\nimport { todoReducer } from './todoReducer';\r\n\r\nconst TodoApp = () => {\r\n    /*const initialState=[{\r\n         id:new Date().getTime(),\r\n         desc:'Aprender React',\r\n         done:false\r\n        }];*/\r\n    \r\n\r\n    const init=()=>{\r\n        // return [{\r\n        //     id:new Date().getTime(),\r\n        //     desc:'Aprender React',\r\n        //     done:false\r\n        //    }]\r\n        return JSON.parse(localStorage.getItem('todos')) || []\r\n    }\r\n\r\n   \r\n\r\n    const [todos,dispatch] = useReducer(todoReducer, [],init);\r\n        \r\n    // const [{descripcion},handleInputChange,reset]=useForm({\r\n    //                                         descripcion:'',\r\n    //                                     })\r\n    \r\n    \r\n    \r\n                                        useEffect(() => {\r\n        localStorage.setItem('todos',JSON.stringify(todos));\r\n    }, [todos])\r\n\r\n    const handleDelete=(id)=>{\r\n        const action ={\r\n            type:'delete',\r\n            playload:id\r\n        }\r\n        dispatch(action);\r\n\r\n    }\r\n\r\n    const handleToggle=(todoid)=>{\r\n        dispatch({\r\n            type:'toggle',\r\n            playload:todoid\r\n        })\r\n    }\r\n\r\n    const handleAddTodo=(newTodo)=>{\r\n        dispatch({\r\n            type:'add',\r\n            playload:newTodo\r\n        });\r\n      \r\n\r\n        \r\n    }\r\n\r\n    // const handleSubmit =(e)=>{\r\n    //     // e.preventDefault();\r\n    //     // if(descripcion.trim().length<=1){\r\n    //     //     return ;\r\n    //     //  }\r\n    //         const newTodo={\r\n    //             id:new Date().getTime(),\r\n    //             desc:descripcion,\r\n    //             done:false\r\n    //         }\r\n\r\n    //        /* const action ={\r\n    //             type:'add',\r\n    //             playload:newTodo\r\n    //         }\r\n\r\n    //         dispatch(action);*/\r\n    //         reset();\r\n    // }\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <h1>TodoApp({todos.length})</h1>\r\n            <hr />\r\n                <div  className=\"row\">\r\n                        <div className=\"col-7\">\r\n                           \r\n                                <TodoList todos={todos} handleToggle={handleToggle}  handleDelete={handleDelete} />\r\n                                {/*\r\n                                    todos.map((todo,i)=>(\r\n                                    <li key={todo.id} \r\n                                        className=\"list-group-item\">\r\n                                        <p className={`${todo.done&&'complete'}`}\r\n                                            onClick={()=>handleToggle(todo.id)}\r\n                                            >{i+1}. {todo.desc}</p>\r\n                                        <button className=\"btn btn-danger\"\r\n                                             onClick={(e)=>handleDelete(todo.id)}>Borrar</button>\r\n                                    </li>\r\n                                    ))*/\r\n                                }\r\n                            \r\n                        </div>\r\n                        <div className=\"col-5\">\r\n                            <TodoAdd handleAddTodo={handleAddTodo}/>\r\n                              {/* \r\n                                 <h4>Agregar TODO</h4>\r\n                                <hr />\r\n\r\n                                <form onSubmit={handleSubmit}>\r\n                                    <input\r\n                                            type=\"text\"\r\n                                            name=\"descripcion\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Aprender ...\"\r\n                                            autoComplete=\"off\"\r\n                                            value={descripcion}\r\n                                            onChange={handleInputChange}\r\n                                            />\r\n                                    <button\r\n                                        type=\"submit\"\r\n                                        className=\"btn btn-outline-primary mt-1 btn-block\"\r\n                                       >\r\n                                            Agregar\r\n                                    </button>\r\n                                </form>\r\n                              */}  \r\n                        </div>\r\n\r\n                </div>\r\n              \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoApp\r\n","  import React from 'react';\n  import ReactDOM from 'react-dom';\nimport TodoApp from './components/08-useReducer/TodoApp';\n  //import Padre from './components/07-tarea-memo/Padre';\n  //import CallbackHook from './components/06-memos/CallbackHook';\n  //import MemoHook from './components/06-memos/MemoHook';\n  //import FormWithCustomHook from './components/02-useEffect/FormWithCustomHook';\n  //import MultipleCustomHooks from './components/03-examples/MultipleCustomHooks';\n  //import FocusScreen from './components/04-useRef/FocusScreen';\n  //import RealExampleRef from './components/04-useRef/RealExampleRef';\n  //import Layout from './components/05-useLayoutEffect/Layout';\n  //import Memorize from './components/06-memos/Memorize';\n\n  //import SimpleForm from './components/02-useEffect/SimpleForm';\n  //import CounterApp from './components/01-useState/CounterApp';\n  //import CounterWithCustomHook from './components/01-useState/CounterWithCustomHook';\n  //import HookApp from './HookApp';\n\n  ReactDOM.render(\n      <TodoApp />,\n    document.getElementById('root')\n  );\n\n\n//import './components/08-useReducer/intro-reduce'"],"sourceRoot":""}